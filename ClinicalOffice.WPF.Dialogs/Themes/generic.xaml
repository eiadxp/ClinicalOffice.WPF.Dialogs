<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dialogs="clr-namespace:ClinicalOffice.WPF.Dialogs">
    <DropShadowEffect x:Key="DropShadowEffect" ShadowDepth="10"/>
    <ControlTemplate x:Key="CloseButtonTemplate">
        <Border x:Name="Border" CornerRadius="3" BorderThickness="1">
            <ContentPresenter Margin="2" RecognizesAccessKey="False" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualTransition GeneratedDuration="0:0:1" />
                    <VisualTransition GeneratedDuration="0:0:0.5" To="Pressed" />
                </VisualStateGroup>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="PaleVioletRed" />
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="DarkRed" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}" />
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                      Storyboard.TargetName="Border">
                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>
    <Style x:Key="CloseStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="CacheMode">
            <Setter.Value>
                <BitmapCache RenderAtScale="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentControl x:Name="ContentControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Foreground="{TemplateBinding Foreground}">
                        <Border x:Name="Border" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="5"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard Duration="0:0:0.1">
                                        <ColorAnimation To="Red" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        Storyboard.TargetName="Border"/>
                                        <ColorAnimation To="DarkRed" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        Storyboard.TargetName="Border"/>
                                        <ColorAnimation To="White" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Foreground.Color" 
                                                        Storyboard.TargetName="ContentControl"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard Duration="0:0:0.1">
                                        <ColorAnimation To="DarkRed" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        Storyboard.TargetName="Border"/>
                                        <ColorAnimation To="Red" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        Storyboard.TargetName="Border"/>
                                        <ColorAnimation To="White" Duration="0:0:0.1"
                                                        Storyboard.TargetProperty="Foreground.Color" 
                                                        Storyboard.TargetName="ContentControl"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="{x:Type dialogs:DialogBase}" TargetType="dialogs:DialogBase">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:DialogBase">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DialogButtonStyle">
            <Setter.Value>
                <Style TargetType="ButtonBase">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Background" Value="{x:Static dialogs:DialogParameters.ButtonsBackground}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="DialogBackGround" Value="{x:Static dialogs:DialogParameters.DialogBackground}"/>
        <Setter Property="DialogEffect" Value="{StaticResource DropShadowEffect}"/>
        <Setter Property="DialogOverlay" Value="{x:Static dialogs:DialogParameters.DialogOverlay}"/>
        <Setter Property="DialogOverlayOpacity" Value="{x:Static dialogs:DialogParameters.DialogOverlayOpacity}"/>
    </Style>
    <Style x:Key="{x:Type dialogs:DialogTitleControl}" TargetType="dialogs:DialogTitleControl">
        <Setter Property="Background" Value="{x:Static dialogs:DialogParameters.TitleBackground}"/>
        <Setter Property="BorderBrush" Value="{x:Static dialogs:DialogParameters.BorderBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:DialogTitleControl">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel LastChildFill="True" Margin="5">
                            <Button DockPanel.Dock="Right" Padding="0" Style="{StaticResource CloseStyle}"
                                    Content="{Binding DialogCloseContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dialogs:DialogBase}}}" 
                                    Command="{x:Static dialogs:DialogCommands.Close}"
                                    MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                    MinHeight="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type dialogs:DialogButtonsControl}" TargetType="dialogs:DialogButtonsControl">
        <Setter Property="Background" Value="{x:Static dialogs:DialogParameters.ButtonsBarBackground}"/>
        <Setter Property="BorderBrush" Value="{x:Static dialogs:DialogParameters.BorderBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:DialogButtonsControl">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="{x:Type dialogs:DialogContentControl}" TargetType="dialogs:DialogContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:DialogContentControl">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Static dialogs:DialogParameters.ContentBackground}"/>
        <Setter Property="BorderBrush" Value="{x:Static dialogs:DialogParameters.BorderBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,25"/>
    </Style>
    <Style  x:Key="{x:Type dialogs:DialogPartsControl}" TargetType="dialogs:DialogPartsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:DialogPartsControl">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="15"/>
    </Style>
</ResourceDictionary>